[{"/home/gkepets/Code/nodesql/frontend/src/index.js":"1","/home/gkepets/Code/nodesql/frontend/src/App.js":"2","/home/gkepets/Code/nodesql/frontend/src/utils.js":"3","/home/gkepets/Code/nodesql/frontend/src/components/Modal/index.js":"4","/home/gkepets/Code/nodesql/frontend/src/components/DataTable/index.js":"5"},{"size":228,"mtime":1637873546525,"results":"6","hashOfConfig":"7"},{"size":2070,"mtime":1637894965044,"results":"8","hashOfConfig":"7"},{"size":8720,"mtime":1637895446503,"results":"9","hashOfConfig":"7"},{"size":577,"mtime":1637894987825,"results":"10","hashOfConfig":"7"},{"size":670,"mtime":1637895656660,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zkrnti",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gkepets/Code/nodesql/frontend/src/index.js",[],["23","24"],"/home/gkepets/Code/nodesql/frontend/src/App.js",["25","26","27"],"/home/gkepets/Code/nodesql/frontend/src/utils.js",["28","29","30","31","32","33"],"/home/gkepets/Code/nodesql/frontend/src/components/Modal/index.js",["34","35"],"/home/gkepets/Code/nodesql/frontend/src/components/DataTable/index.js",["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":7,"column":9,"nodeType":"44","messageId":"45","endLine":7,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":47,"column":13,"nodeType":"48","endLine":47,"endColumn":35},{"ruleId":"42","severity":1,"message":"49","line":53,"column":9,"nodeType":"44","messageId":"45","endLine":53,"endColumn":15},{"ruleId":"42","severity":1,"message":"50","line":17,"column":7,"nodeType":"44","messageId":"45","endLine":17,"endColumn":22},{"ruleId":"42","severity":1,"message":"51","line":36,"column":7,"nodeType":"44","messageId":"45","endLine":36,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":182,"column":27,"nodeType":"54","messageId":"55","endLine":182,"endColumn":29},{"ruleId":"52","severity":1,"message":"53","line":200,"column":28,"nodeType":"54","messageId":"55","endLine":200,"endColumn":30},{"ruleId":"42","severity":1,"message":"56","line":251,"column":9,"nodeType":"44","messageId":"45","endLine":251,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":260,"column":33,"nodeType":"59","messageId":"60","endLine":260,"endColumn":34,"fix":"61"},{"ruleId":"42","severity":1,"message":"62","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"63","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"62","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"63","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'operations' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'graph' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'canvas' is assigned a value but never used.","'getNodeFromLink' is assigned a value but never used.","'getLink' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'paths' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"66","text":"67"},"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[8118,8129],"\r\n        ."]